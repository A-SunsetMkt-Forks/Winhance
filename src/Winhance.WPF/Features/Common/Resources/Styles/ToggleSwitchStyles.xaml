<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Winhance.WPF.Features.Common.Converters">

    <!--
    Custom Toggle Switch Style
    
    This style implements a toggle switch with:
    1. Enabled State: Green fill with a checkmark on the knob
    2. Disabled State: Red fill with an X on the knob
    
    The appearance is consistent across both light and dark themes.
    -->
    <Style x:Key="MaterialToggleSwitch" TargetType="ToggleButton">
        <!-- The Tag property is set by the default style for all ToggleButtons -->
        <Setter Property="Foreground" Value="{DynamicResource ControlForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Toggle Switch Track (using Border with no border) -->
                        <Border x:Name="SwitchTrack"
                                Width="40" Height="20"
                                CornerRadius="10"
                                BorderThickness="0"
                                Background="#FFE53935"
                                VerticalAlignment="Center">
                            
                            <!-- Knob with icon container -->
                            <Grid x:Name="KnobContainer" 
                                  HorizontalAlignment="Left"
                                  Margin="2,0,0,0"
                                  Width="16" Height="16">
                                
                                <!-- The knob itself -->
                                <Ellipse x:Name="SwitchKnob"
                                         Width="16" Height="16">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="White" />
                                    </Ellipse.Fill>
                                    <Ellipse.Effect>
                                        <DropShadowEffect ShadowDepth="1" Direction="315" Color="Black" Opacity="0.3" BlurRadius="2"/>
                                    </Ellipse.Effect>
                                </Ellipse>
                                
                                <!-- X icon for unchecked state -->
                                <Path x:Name="XIcon"
                                      Data="M 4,4 L 12,12 M 12,4 L 4,12"
                                      Stroke="#FFE53935"
                                      StrokeThickness="1.5"
                                      StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round"
                                      Visibility="Visible" />
                                
                                <!-- Checkmark icon for checked state -->
                                <Path x:Name="CheckIcon"
                                      Data="M 4,8 L 7,11 L 12,5"
                                      Stroke="#FF4CAF50"
                                      StrokeThickness="1.5"
                                      StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round"
                                      Visibility="Collapsed" />
                            </Grid>
                        </Border>

                        <!-- Content -->
                        <ContentPresenter Grid.Column="1"
                                          Margin="10,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Move knob to right position when checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="KnobContainer" Property="Margin" Value="22,0,0,0"/>
                            <Setter TargetName="SwitchTrack" Property="Background" Value="#FF4CAF50"/> <!-- Green when checked -->
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="XIcon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Common hover state -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SwitchTrack" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        
                        <!-- Disabled state -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="SwitchTrack" Property="Opacity" Value="0.6"/>
                            <Setter TargetName="SwitchKnob" Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Default style for all ToggleButtons in the application -->
    <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialToggleSwitch}">
        <!-- Set default Tag value -->
        <Setter Property="Tag" Value="{Binding Source={x:Static Application.Current}, Path=Resources[IsDarkTheme], Converter={StaticResource BooleanToThemeConverter}, FallbackValue=Light}"/>
        <Style.Triggers>
            <!-- Automatically set the Tag property based on the application theme -->
            <DataTrigger Binding="{Binding Source={x:Static Application.Current}, Path=Resources[IsDarkTheme]}" Value="True">
                <Setter Property="Tag" Value="Dark"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Application.Current}, Path=Resources[IsDarkTheme]}" Value="False">
                <Setter Property="Tag" Value="Light"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>

