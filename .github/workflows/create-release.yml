name: Create Release

on:
  push:
    tags:
      - 'v*' # Trigger on any tag that starts with 'v'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history to get commit messages
        
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Get release template
        id: get_template
        run: |
          if [ -f ".github/RELEASE_TEMPLATE.md" ]; then
            template=$(cat .github/RELEASE_TEMPLATE.md)
            echo "TEMPLATE<<EOF" >> $GITHUB_OUTPUT
            echo "$template" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "TEMPLATE=# Release ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          fi
        shell: bash
        
      - name: Get commit messages
        id: get_commits
        run: |
          # Get the previous tag
          previous_tag=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$previous_tag" ]; then
            # If no previous tag, get all commits
            commit_list=$(git log --pretty=format:"- %s" | grep -v "Merge pull request" | grep -v "Merge branch")
          else
            # Get commits between previous tag and current tag
            commit_list=$(git log --pretty=format:"- %s" $previous_tag..HEAD | grep -v "Merge pull request" | grep -v "Merge branch")
          fi
          
          # Get pull request titles
          pr_list=$(git log --pretty=format:"%s" $previous_tag..HEAD | grep "Merge pull request" | sed 's/Merge pull request #[0-9]* from [^/]*\///g' | sed 's/-/ /g' | sed 's/_/ /g' | sed 's/^/- /')
          
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          echo "$commit_list" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "PULL_REQUESTS<<EOF" >> $GITHUB_OUTPUT
          echo "$pr_list" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Process template
        id: process_template
        run: |
          template="${{ steps.get_template.outputs.TEMPLATE }}"
          version="${{ steps.get_version.outputs.VERSION }}"
          commits="${{ steps.get_commits.outputs.COMMITS }}"
          pull_requests="${{ steps.get_commits.outputs.PULL_REQUESTS }}"
          
          # Replace version placeholder
          template="${template//\[VERSION\]/$version}"
          
          # Add commit messages to What's New section if there are any
          if [ ! -z "$pull_requests" ]; then
            template=$(echo "$template" | sed '/## What.s New/{n;s/- /'"$pull_requests"'\n/}')
          elif [ ! -z "$commits" ]; then
            template=$(echo "$template" | sed '/## What.s New/{n;s/- /'"$commits"'\n/}')
          fi
          
          echo "PROCESSED_TEMPLATE<<EOF" >> $GITHUB_OUTPUT
          echo "$template" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Winhance v${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.process_template.outputs.PROCESSED_TEMPLATE }}
          draft: true # Create as draft so you can upload files manually
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}